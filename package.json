{
    "name": "python-environment-manager",
    "displayName": "Python Environment Manager (deprecated)",
    "description": "View and manage Python environments & packages.",
    "version": "1.2.7",
    "capabilities": {
        "untrustedWorkspaces": {
            "supported": false,
            "description": "Management of Python environments in untrusted workspaces is not supported."
        },
        "virtualWorkspaces": {
            "supported": false,
            "description": "Management of Python environments is not supported on the web."
        }
    },
    "publisher": "donjayamanne",
    "author": {
        "name": "Don Jayamanne"
    },
    "license": "MIT",
    "homepage": "https://github.com/DonJayamanne/vscode-python-manager",
    "repository": {
        "type": "git",
        "url": "https://github.com/DonJayamanne/vscode-python-manager"
    },
    "bugs": {
        "url": "https://github.com/DonJayamanne/vscode-python-manager/issues"
    },
    "qna": "https://github.com/DonJayamanne/vscode-python-manager/issues",
    "galleryBanner": {
        "color": "#1e415e",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.82.0"
    },
    "enableTelemetry": false,
    "keywords": [
        "python",
        "conda",
        "venv",
        "pipenv",
        "pyenv",
        "packages"
    ],
    "categories": [
        "Programming Languages",
        "Machine Learning",
        "Other",
        "Data Science"
    ],
    "activationEvents": [],
    "main": "./out/client/extension",
    "contributes": {
        "commands": [
            {
                "command": "python.envManager.clearPersistentStorage",
                "title": "Python: Clear Environment Manager cache",
                "enablement": "false"
            },
            {
                "command": "python.envManager.create",
                "title": "Create Environment",
                "icon": "$(add)"
            },
            {
                "command": "python.envManager.delete",
                "title": "Delete Environment",
                "icon": "$(trash)"
            },
            {
                "command": "python.envManager.viewPackages",
                "title": "View Packages",
                "icon": "$(package)"
            },
            {
                "command": "python.envManager.openInTerminal",
                "title": "Open in Terminal",
                "icon": "$(terminal)"
            },
            {
                "command": "python.envManager.refresh",
                "title": "Refresh Environments",
                "icon": "$(refresh)"
            },
            {
                "command": "python.envManager.refreshing",
                "title": "Loading Environments",
                "icon": "$(loading~spin)"
            },
            {
                "command": "python.envManager.setAsActiveInterpreter",
                "title": "Set as active workspace interpreter",
                "icon": "$(star)"
            },
            {
                "command": "python.envManager.installPython",
                "title": "Download and setup Python",
                "icon": "$(cloud-download)"
            },
            {
                "command": "python.envManager.updatePackage",
                "title": "Update Package",
                "icon": "$(cloud-download)"
            },
            {
                "command": "python.envManager.searchAndInstallPackage",
                "title": "Install Package",
                "icon": "$(search)"
            },
            {
                "command": "python.envManager.uninstallPackage",
                "title": "Uninstall Package",
                "icon": "$(trash)"
            },
            {
                "command": "python.envManager.refreshPackages",
                "title": "Refresh",
                "icon": "$(refresh)"
            },
            {
                "command": "python.envManager.updateAllPackages",
                "title": "Update All Packages",
                "icon": "$(cloud-download)"
            },
            {
                "command": "python.envManager.exportEnvironment",
                "title": "Export Environment",
                "icon": "$(export)"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "python.envManager.create",
                    "when": "(view == workspaceEnvironments) && !isRefreshingPythonEnvironments",
                    "group": "navigation"
                },
                {
                    "command": "python.envManager.refresh",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && !isRefreshingPythonEnvironments",
                    "group": "navigation"
                },
                {
                    "command": "python.envManager.refreshing",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && isRefreshingPythonEnvironments",
                    "group": "navigation"
                },
                {
                    "command": "python.envManager.installPython",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && python.envManager.pythonIsNotInstalled",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "python.envManager.create",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^envType:canCreate:/",
                    "group": "inline"
                },
                {
                    "command": "python.envManager.openInTerminal",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^env:/ && !(viewItem =~/isNonPythonCondaEnvironment/)",
                    "group": "inline@2"
                },
                {
                    "command": "python.envManager.setAsActiveInterpreter",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^env:/ && !(viewItem =~/isActiveEnvironment/) && !(viewItem =~/isNonPythonCondaEnvironment/) && workspaceFolderCount >= 1",
                    "group": "inline@3"
                },
                {
                    "command": "python.envManager.delete",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^env:canBeDeleted:/",
                    "group": "inline@5"
                },
                {
                    "command": "python.envManager.updatePackage",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^package:outdated/",
                    "group": "inline@3"
                },
                {
                    "command": "python.envManager.searchAndInstallPackage",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^packageContainer/ && viewItem =~/canManagePackages/",
                    "group": "inline@1"
                },
                {
                    "command": "python.envManager.exportEnvironment",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^env:/ && viewItem =~ /:hasSysPrefix/",
                    "group": "inline@4"
                },
                {
                    "command": "python.envManager.uninstallPackage",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^package:/ && viewItem =~/canManagePackages/",
                    "group": "inline@3"
                },
                {
                    "command": "python.envManager.refreshPackages",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^packageContainer/ && !(viewItem =~/isNonPythonCondaEnvironment/)",
                    "group": "inline@2"
                },
                {
                    "command": "python.envManager.updateAllPackages",
                    "when": "(view == pythonEnvironments || view == workspaceEnvironments) && viewItem =~ /^packageContainer/ && viewItem =~/canManagePackages/",
                    "group": "inline@3"
                }
            ]
        },
        "viewsWelcome": [],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "package-explorer",
                    "title": "Python",
                    "icon": "resources/logo.svg"
                }
            ]
        },
        "views": {
            "package-explorer": [
                {
                    "id": "workspaceEnvironments",
                    "name": "Workspace Environments",
                    "icon": "resources/logo.svg",
                    "contextualTitle": "Workspace Environment",
                    "when": "workspaceFolderCount >= 1"
                },
                {
                    "id": "pythonEnvironments",
                    "name": "Global Environments",
                    "icon": "resources/logo.svg",
                    "contextualTitle": "Environment Manager"
                }
            ]
        }
    },
    "scripts": {
        "postinstall": "vscode-dts 1.82.0",
        "package": "gulp clean && gulp prePublishBundle && vsce package -o python-env-manager.vsix",
        "prePublish": "gulp clean && gulp prePublishNonBundle",
        "compile": "tsc -watch -p ./",
        "compiled": "deemon npm run compile",
        "kill-compiled": "deemon --kill npm run compile",
        "checkDependencies": "gulp checkDependencies",
        "test": "node ./out/test/standardTest.js && node ./out/test/multiRootTest.js",
        "test:unittests": "mocha --config ./build/.mocha.unittests.json",
        "test:unittests:cover": "nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json",
        "test:functional": "mocha --require source-map-support/register --config ./build/.mocha.functional.json",
        "test:functional:perf": "node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json",
        "test:functional:memleak": "node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json",
        "test:functional:cover": "nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json",
        "test:cover:report": "nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura",
        "testDebugger": "node ./out/test/testBootstrap.js ./out/test/debuggerTest.js",
        "testDebugger:cover": "nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js",
        "testSingleWorkspace": "node ./out/test/testBootstrap.js ./out/test/standardTest.js",
        "testSingleWorkspace:cover": "nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js",
        "preTestJediLSP": "node ./out/test/languageServers/jedi/lspSetup.js",
        "testJediLSP": "node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js",
        "testMultiWorkspace": "node ./out/test/testBootstrap.js ./out/test/multiRootTest.js",
        "testPerformance": "node ./out/test/testBootstrap.js ./out/test/performanceTest.js",
        "testSmoke": "cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"",
        "testInsiders": "cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"",
        "lint-staged": "node gulpfile.js",
        "lint": "eslint --ext .ts,.js src build",
        "lint-fix": "eslint --fix --ext .ts,.js src build gulpfile.js",
        "format-check": "prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js",
        "format-fix": "prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js",
        "clean": "gulp clean",
        "addExtensionPackDependencies": "gulp addExtensionPackDependencies",
        "updateBuildNumber": "gulp updateBuildNumber",
        "verifyBundle": "gulp verifyBundle",
        "webpack": "webpack"
    },
    "dependencies": {
        "@iarna/toml": "^2.2.5",
        "@vscode/codicons": "0.0.26",
        "@vscode/python-extension": "^1.0.4",
        "arch": "^2.1.0",
        "diff-match-patch": "^1.0.0",
        "fs-extra": "^10.0.1",
        "glob": "^7.2.0",
        "hash.js": "^1.1.7",
        "iconv-lite": "^0.6.3",
        "inversify": "^5.0.4",
        "is-wsl": "^2.2.0",
        "jsonc-parser": "^3.0.0",
        "lodash": "^4.17.21",
        "md5": "^2.2.1",
        "minimatch": "^5.0.1",
        "named-js-regexp": "^1.3.3",
        "node-stream-zip": "^1.6.0",
        "reflect-metadata": "^0.1.12",
        "request": "^2.88.2",
        "request-progress": "^3.0.0",
        "rxjs": "^6.5.4",
        "rxjs-compat": "^6.5.4",
        "semver": "^5.5.0",
        "stack-trace": "0.0.10",
        "sudo-prompt": "^9.2.1",
        "tar": "^6.1.11",
        "tmp": "^0.0.33",
        "uint64be": "^3.0.0",
        "unicode": "^14.0.0",
        "untildify": "^4.0.0",
        "which": "^2.0.2",
        "winreg": "^1.2.4",
        "xml2js": "^0.5.0"
    },
    "devDependencies": {
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@types/bent": "^7.3.0",
        "@types/chai": "^4.1.2",
        "@types/chai-arrays": "^2.0.0",
        "@types/chai-as-promised": "^7.1.0",
        "@types/diff-match-patch": "^1.0.32",
        "@types/download": "^8.0.1",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/lodash": "^4.14.104",
        "@types/md5": "^2.1.32",
        "@types/mocha": "^9.1.0",
        "@types/nock": "^10.0.3",
        "@types/node": "^16.17.0",
        "@types/request": "^2.48.8",
        "@types/semver": "^5.5.0",
        "@types/shortid": "^0.0.29",
        "@types/sinon": "^10.0.11",
        "@types/stack-trace": "0.0.29",
        "@types/tar": "^6.1.1",
        "@types/tmp": "^0.0.33",
        "@types/uuid": "^8.3.4",
        "@types/which": "^2.0.1",
        "@types/winreg": "^1.2.30",
        "@types/xml2js": "^0.4.2",
        "@typescript-eslint/eslint-plugin": "^3.7.0",
        "@typescript-eslint/parser": "^3.7.0",
        "@vscode/test-electron": "^2.1.3",
        "@vscode/vsce": "^2.18.0",
        "bent": "^7.3.12",
        "chai": "^4.1.2",
        "chai-arrays": "^2.0.0",
        "chai-as-promised": "^7.1.1",
        "copy-webpack-plugin": "^9.1.0",
        "cross-spawn": "^6.0.5",
        "deemon": "^1.6.0",
        "del": "^6.0.0",
        "download": "^8.0.0",
        "es5-ext": "0.10.53",
        "eslint": "^7.2.0",
        "eslint-config-airbnb": "^18.2.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsx-a11y": "^6.3.1",
        "eslint-plugin-react": "^7.20.3",
        "eslint-plugin-react-hooks": "^4.0.0",
        "expose-loader": "^3.1.0",
        "flat": "^5.0.2",
        "get-port": "^5.1.1",
        "gulp": "^4.0.0",
        "gulp-typescript": "^5.0.0",
        "mocha": "^9.2.2",
        "mocha-junit-reporter": "^2.0.2",
        "mocha-multi-reporters": "^1.1.7",
        "nock": "^10.0.6",
        "node-has-native-dependencies": "^1.0.2",
        "node-loader": "^1.0.2",
        "node-polyfill-webpack-plugin": "^1.1.4",
        "nyc": "^15.0.0",
        "prettier": "^2.0.2",
        "rewiremock": "^3.13.0",
        "rimraf": "^3.0.2",
        "shortid": "^2.2.8",
        "sinon": "^13.0.1",
        "source-map-support": "^0.5.12",
        "ts-loader": "^9.2.8",
        "ts-mockito": "^2.5.0",
        "ts-node": "^10.7.0",
        "tsconfig-paths-webpack-plugin": "^3.2.0",
        "typemoq": "^2.1.0",
        "typescript": "4.5.5",
        "uuid": "^8.3.2",
        "vscode-dts": "^0.3.3",
        "webpack": "^5.76.0",
        "webpack-bundle-analyzer": "^4.5.0",
        "webpack-cli": "^4.9.2",
        "webpack-fix-default-import-plugin": "^1.0.3",
        "webpack-merge": "^5.8.0",
        "webpack-node-externals": "^3.0.0",
        "webpack-require-from": "^1.8.6",
        "yargs": "^15.3.1"
    }
}
